-- MySQL Script generated by MySQL Workbench
-- Sat Apr 28 09:20:28 2018
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema TT_COURTSHIP
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `TT_COURTSHIP` ;

-- -----------------------------------------------------
-- Schema TT_COURTSHIP
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `TT_COURTSHIP` DEFAULT CHARACTER SET utf8 ;
USE `TT_COURTSHIP` ;

-- -----------------------------------------------------
-- Table `TT_COURTSHIP`.`TT_ACCOUNTS`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TT_COURTSHIP`.`TT_ACCOUNTS` ;

CREATE TABLE IF NOT EXISTS `TT_COURTSHIP`.`TT_ACCOUNTS` (
  `A_ID` INT NOT NULL AUTO_INCREMENT COMMENT '账户ID,与账户信息相关联的编号\n自增长',
  `A_ACCOUNT_EMAIL` VARCHAR(30) NOT NULL COMMENT '\'帐号_邮箱\'',
  `A_PASSWD` VARCHAR(64) NOT NULL COMMENT '\'密码\'',
  `A_ACCOUNT_PHONE` VARCHAR(15) NULL COMMENT '\'帐号_手机号\'',
  `A_NAME` VARCHAR(45) NOT NULL COMMENT '\'账户昵称\'',
  PRIMARY KEY (`A_ID`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = '账户表';


-- -----------------------------------------------------
-- Table `TT_COURTSHIP`.`TT_COURTSHIP_PAGES_TYPES`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TT_COURTSHIP`.`TT_COURTSHIP_PAGES_TYPES` ;

CREATE TABLE IF NOT EXISTS `TT_COURTSHIP`.`TT_COURTSHIP_PAGES_TYPES` (
  `CPT_ID` INT NOT NULL AUTO_INCREMENT COMMENT '表白页的类型编号',
  `CPT_NAME` VARCHAR(20) NOT NULL COMMENT '表白页的类型名',
  `CPT_DESCRIPTION` VARCHAR(45) NOT NULL COMMENT '表白页的类型描述',
  `CPT_CREATETIME` DATETIME NULL COMMENT '表白页的类型创建时间',
  `CPT_COUNT` INT NOT NULL DEFAULT 0 COMMENT '表白页的个数',
  PRIMARY KEY (`CPT_ID`))
ENGINE = InnoDB
COMMENT = '表白页的类型';


-- -----------------------------------------------------
-- Table `TT_COURTSHIP`.`TT_COURTSHIP_PAGES`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TT_COURTSHIP`.`TT_COURTSHIP_PAGES` ;

CREATE TABLE IF NOT EXISTS `TT_COURTSHIP`.`TT_COURTSHIP_PAGES` (
  `CP_ID` INT NOT NULL AUTO_INCREMENT COMMENT '用于标识表白页的编号\n自增长',
  `CP_ADDRESS` VARCHAR(200) NOT NULL,
  `CP_USED_COUNT` INT NOT NULL DEFAULT 0 COMMENT '被使用的次数',
  `CP_STARTTIME` DATETIME NULL,
  `CP_COLLECTED_COUNT` INT NOT NULL DEFAULT 0 COMMENT '表白页被收藏次数',
  `CPT_ID` INT NULL COMMENT '表白页的类型编号',
  PRIMARY KEY (`CP_ID`),
  INDEX `FK_COUNRTSHIP_PAGES_TYPES_CPT_ID_idx` (`CPT_ID` ASC))
ENGINE = InnoDB
COMMENT = '公共展示表白页';


-- -----------------------------------------------------
-- Table `TT_COURTSHIP`.`TT_COURTSHIP_PAGES_PARAMETERS`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TT_COURTSHIP`.`TT_COURTSHIP_PAGES_PARAMETERS` ;

CREATE TABLE IF NOT EXISTS `TT_COURTSHIP`.`TT_COURTSHIP_PAGES_PARAMETERS` (
  `CP_ID` INT NOT NULL COMMENT '外键：标识表白页的编号\n',
  `CPP_INDEX` INT NOT NULL COMMENT '表白页的内容填充位置',
  `CPP_DESCRIPTION` VARCHAR(45) NOT NULL COMMENT '表白页属性的描述',
  `CPP_CONTENT` VARCHAR(300) NOT NULL COMMENT '表白页属性的内容模版',
  INDEX `FK_TT_COURTSHIP_PAGE_ID_idx` (`CP_ID` ASC))
ENGINE = InnoDB
COMMENT = '表白页的属性\n';


-- -----------------------------------------------------
-- Table `TT_COURTSHIP`.`TT_COURTSHIP_USEING`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TT_COURTSHIP`.`TT_COURTSHIP_USEING` ;

CREATE TABLE IF NOT EXISTS `TT_COURTSHIP`.`TT_COURTSHIP_USEING` (
  `CU_ID` INT NOT NULL AUTO_INCREMENT COMMENT '用户已经使用的表白页的编号',
  `A_ID` INT NOT NULL COMMENT '用户编号',
  `CP_ID` INT NOT NULL COMMENT '表白页的编号',
  `CU_CREATETIME` DATETIME NULL,
  `CU_PASSWD` VARCHAR(64) NOT NULL COMMENT '用于被表白的人回复的密码',
  `CU_LEVEL_MSG` VARCHAR(200) NULL COMMENT '被表白人的回复信息',
  `CU_SURE` VARCHAR(8) NULL COMMENT '被表白人是否同意：同意、不同意、考虑考虑',
  `CU_RETURN_TIME` DATETIME NULL COMMENT '被表白人回复时间，需要插入',
  INDEX `FK_TT_ACCOUNTS_A_ID_idx` (`A_ID` ASC),
  INDEX `DK_TT_COURTSHIP_PAGES_CP_ID_idx` (`CP_ID` ASC),
  PRIMARY KEY (`CU_ID`))
ENGINE = InnoDB
COMMENT = '用户已经使用的表白页';


-- -----------------------------------------------------
-- Table `TT_COURTSHIP`.`TT_COURTSHIP_PAGES_USEING_PARAMETERS`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TT_COURTSHIP`.`TT_COURTSHIP_PAGES_USEING_PARAMETERS` ;

CREATE TABLE IF NOT EXISTS `TT_COURTSHIP`.`TT_COURTSHIP_PAGES_USEING_PARAMETERS` (
  `CU_ID` INT NOT NULL,
  `CP_ID` INT NOT NULL COMMENT '外键：标识表白页的编号\n',
  `CPUP_INDEX` INT NOT NULL COMMENT '表白页的内容填充位置',
  `CPUP_CONTENT` VARCHAR(300) NOT NULL COMMENT '表白页属性的内容模版',
  INDEX `FK_COURTSHIP_USEING_CU_ID_idx` (`CU_ID` ASC))
ENGINE = InnoDB
COMMENT = '用户配置的表白页的属性\n';


-- -----------------------------------------------------
-- Table `TT_COURTSHIP`.`TT_COURTSHIP_COLLECTION`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TT_COURTSHIP`.`TT_COURTSHIP_COLLECTION` ;

CREATE TABLE IF NOT EXISTS `TT_COURTSHIP`.`TT_COURTSHIP_COLLECTION` (
  `A_ID` INT NOT NULL COMMENT '用户账户的编号',
  `CP_ID` INT NOT NULL COMMENT '表白页的编号',
  `CC_STARTTIME` DATETIME NULL,
  INDEX `DK_ACCOUNTS_A_ID_idx` (`A_ID` ASC),
  INDEX `FK_COURTSHIP_PAGES_CP_ID_idx` (`CP_ID` ASC))
ENGINE = InnoDB
COMMENT = '用户收藏的表白页';


-- -----------------------------------------------------
-- Table `TT_COURTSHIP`.`TT_COURTSHIP_USING_MSG`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TT_COURTSHIP`.`TT_COURTSHIP_USING_MSG` ;

CREATE TABLE IF NOT EXISTS `TT_COURTSHIP`.`TT_COURTSHIP_USING_MSG` (
  `CU_ID` INT NOT NULL,
  `CUM_PASSWD` VARCHAR(64) NOT NULL,
  `CUM_LEVEL_MSG` VARCHAR(200) NULL,
  `CUM_SURE` VARCHAR(10) NULL COMMENT '可选项：同意、不同意、考虑考虑（默认）',
  INDEX `DK_COURTSHIP_USING_CU_ID_idx` (`CU_ID` ASC))
ENGINE = InnoDB
COMMENT = '对当前页面进行留言';

 

USE `TT_COURTSHIP`;

DELIMITER $$

USE `TT_COURTSHIP`$$
DROP TRIGGER IF EXISTS `TT_COURTSHIP`.`TT_COURTSHIP_PAGES_TYPES_BEFORE_INSERT` $$
USE `TT_COURTSHIP`$$
CREATE DEFINER = CURRENT_USER TRIGGER `TT_COURTSHIP`.`TT_COURTSHIP_PAGES_TYPES_BEFORE_INSERT` BEFORE INSERT ON `TT_COURTSHIP_PAGES_TYPES` FOR EACH ROW
BEGIN
SET NEW.CPT_CREATETIME=NOW();
END$$


USE `TT_COURTSHIP`$$
DROP TRIGGER IF EXISTS `TT_COURTSHIP`.`TT_COURTSHIP_PAGES_BEFORE_INSERT` $$
USE `TT_COURTSHIP`$$
CREATE DEFINER = CURRENT_USER TRIGGER `TT_COURTSHIP`.`TT_COURTSHIP_PAGES_BEFORE_INSERT` BEFORE INSERT ON `TT_COURTSHIP_PAGES` FOR EACH ROW
BEGIN
set NEW.CP_STARTTIME=NOW();
UPDATE TT_COURTSHIP_PAGES_TYPES SET  CPT_COUNT=CPT_COUNT+1 WHERE CPT_ID = NEW.CPT_ID;
END$$


USE `TT_COURTSHIP`$$
DROP TRIGGER IF EXISTS `TT_COURTSHIP`.`TT_COURTSHIP_USEING_BEFORE_INSERT` $$
USE `TT_COURTSHIP`$$
CREATE DEFINER = CURRENT_USER TRIGGER `TT_COURTSHIP`.`TT_COURTSHIP_USEING_BEFORE_INSERT` BEFORE INSERT ON `TT_COURTSHIP_USEING` FOR EACH ROW
BEGIN
SET NEW.CU_CREATETIME=NOW();
UPDATE TT_COURTSHIP_PAGES SET CP_USED_COUNT=CP_USED_COUNT+1 WHERE CP_ID=NEW.CP_ID;
END$$


USE `TT_COURTSHIP`$$
DROP TRIGGER IF EXISTS `TT_COURTSHIP`.`TT_COURTSHIP_COLLECT_AFTER_INSERT` $$
USE `TT_COURTSHIP`$$
CREATE DEFINER = CURRENT_USER TRIGGER `TT_COURTSHIP`.`TT_COURTSHIP_COLLECT_AFTER_INSERT` BEFORE INSERT ON `TT_COURTSHIP_COLLECTION` FOR EACH ROW
BEGIN
SET NEW.CC_STARTTIME=NOW();
UPDATE TT_COURTSHIP_PAGES SET CP_COLLECTED_COUNT=CP_COLLECTED_COUNT+1 WHERE CP_ID=NEW.CP_ID;
END


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
